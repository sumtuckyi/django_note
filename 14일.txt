Dajngo Model
: 데이터베이스의 테이블을 정의하고 데이터를 조작할 수 있는 기능들을 제공
-테이블을 생성, 수정, 삭제하는 작업을 모두 포함 

app폴더 내의
model.py파일에서
model class작성 => 테이블 설계만
Model class는 테이블 설계도와 같음
Model은 model에 관련된 모든 코드가 이미 작성되어 있는 클래스
-model Field class : 데이터 필드의 데이터 타입을 결정하고, 키워드 인자로 테이블 필드의 제약조건을 설정한다. 
ex) CharField(max_length=10)

Mirgrationspty
: model class의 변경사항을 데이터베이스에 최종 반영하는 방법
★★★★★
model class를 기반으로 최종설계도(migration)작성하기
$ python manage.py makemigrations
최종설계도를 DB에 전달하여 반영하기
$ python manage.py migrate
두 명령어를 실행하면 
DB에 "앱 이름_class 이름"의 테이블이 생성된 것을 확인할 수 있다.  

추가 Migrations
이미 생성된 테이블에 필드를 추가하기
migrations과정이 종료되면 n번째 migration파일이 생성됨

=> model class 변경 -> makemigrations -> migrate
★★★★★
Model Field
-CharField() : 길이 제한이 있는 문자열, 인자는 필수로 전달해야함
-TextField() : 글자의 수가 많을 때 사용 
-DateTimeField : 선택인자(auto_now, auto_now_add)

Admin site - Automatic admin interface
: Django는 추가 설치 및 설정 없이 자동으로 관리자 인터페이스를 제공, 초기에는 내장앱에 한해 기능 제공    
관리자 계정 생성하기                                                                                                                                                                                                                                                                                                                                                                                                                               
$ python manage.py createsuperuser
-username, email(option), password 입력
★★admin에 모델 클래스 등록★★
-admin.py에 작성한 모델 클래스를 등록해야만 admin site에서 테이블을 확인 가능 

※데이터베이스 초기화
-migration폴더 내의 migration파일(ex-'0001_initial.py') 삭제
-db.sqlite3파일 삭제

참고)
migrations파일들이 migrate되었는지 여부를 확인
$ python manage.py showmigrations
해당 migrations파일(python으로 작성)이 SQL언어로 어떻게 번역되어 DB에 전달되는지 확인
$ python manage.py sqlmigrate 파일명

CRUD
소프트웨어가 가지는 기본적인 데이터 처리 기능
-CREATE 저장
-READ 조회
-UPDATE 갱신
-DELETE 삭제

※django는 데이터베이스 테이블의 id(PK, 고유키)를 재사용하지 않음

읽어볼 자료(안전한 패스워드 저장)
https://d2.naver.com/helloworld/318732


